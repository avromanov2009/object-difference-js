!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("ObjDiff",[],e):"object"==typeof exports?exports.ObjDiff=e():t.ObjDiff=e()}("undefined"!=typeof self?self:this,function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var n={ObjectDifference:r(1).GetObjectDifference};e.default=n,t.exports=e.default},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GetObjectDifference=function(t,e,r){return h("",t,e,r)};var n,o=(n=r(2))&&n.__esModule?n:{default:n};function f(t){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var u="created",i="updated",c="deleted",p="NA";function a(t){return""===t||0===t||null==t||t==={}||Array.isArray(t)&&t.length<1}function y(t){return!a(t)&&("boolean"==typeof t||"number"==typeof t||"string"==typeof t)}function l(t){return!a(t)&&t instanceof Date}function s(t){return!a(t)&&Array.isArray(t)}function d(t){return"function"==typeof t}function b(t){return"symbol"===f(t)}function m(t){return!(y(t)||a(t)||l(t)||s(t)||d(t)||b(t))}function g(t,e){return t?"".concat(t,".").concat(e):e}function h(t,e,r,n){var f=[];if("__ob__"===e||"__proto__"===e)return f;if(y(r)&&y(n))return r==n?f:(f.push({property:g(t,e),type:i,from:r,to:n}),f);if(d(r)||d(n))return f.push({property:g(t,e),type:p,from:(0,o.default)(r),to:(0,o.default)(n)}),f;if(b(r)||b(n))return f.push({property:g(t,e),type:i,from:(0,o.default)(r),to:(0,o.default)(n)}),f;if(l(r)&&l(n))return r.getTime()===n.getTime()?f:(f.push({property:g(t,e),type:i,from:(0,o.default)(r),to:(0,o.default)(n)}),f);if(l(r)&&y(n)||l(n)&&y(r))return f.push({property:g(t,e),type:i,from:(0,o.default)(r),to:(0,o.default)(n)}),f;if(a(r)&&a(n))return f;if(a(r)&&y(n))return f.push({property:g(t,e),type:u,from:"",to:(0,o.default)(n)}),f;if(a(r)&&l(n))return f.push({property:g(t,e),type:u,from:"",to:(0,o.default)(n)}),f;if(a(r)&&s(n)){for(var v=0;v<n.length;v++)f=f.concat(h(g(t,e),"[".concat(v,"]"),void 0,n[v]));return f}if(a(r)&&m(n))return Object.getOwnPropertyNames(n).forEach(function(r,o,u){f=f.concat(h(g(t,e),r,void 0,n[r]))}),f;if((y(r)||l(r)||s(r)||m(r))&&a(n))return f.push({property:g(t,e),type:c,from:"",to:""}),f;if((y(r)||l(r))&&s(n)){f.push({property:g(t,e),type:c,from:"",to:""});for(var O=0;O<n.length;O++)f=f.concat(h(g(t,e),"[".concat(O,"]"),void 0,n[O]));return f}if((y(r)||l(r))&&m(n))return f.push({property:g(t,e),type:c,from:"",to:""}),Object.getOwnPropertyNames(n).forEach(function(r,o,u){f=f.concat(h(g(t,e),r,void 0,n[r]))}),f;if(s(r)&&(y(n)||l(n)))return f.push({property:g(t,e),type:i,from:"Array[".concat(r.length,"]"),to:(0,o.default)(n)}),f;if(s(r)&&s(n))return f=f.concat(function(t,e,r,n){var o=[];if(r.length===n.length){for(var f=0;f<r.length;f++)if(JSON.stringify(r)!==JSON.stringify(n))for(var u=0;u<r.length;u++)o=o.concat(h(g(t,e),"[".concat(u,"]"),r[u],n[u]));return o}if(r.length>30||n.length>30)return o.push({property:g(t,e),type:i,from:"Array[".concat(r.length,"]"),to:"Array[".concat(n.length,"]")}),o;function c(t){return function(e){return 0===t.filter(function(t){return JSON.stringify(t)===JSON.stringify(e)}).length}}for(var p=r.filter(c(n)),a=n.filter(c(r)),y=0;y<p.length;y++)o=o.concat(h(g(t,e),"[".concat(y,"]"),p[y],void 0));for(var l=0;l<a.length;l++)o=o.concat(h(g(t,e),"[".concat(l,"]"),void 0,a[l]));return o}(t,e,r,n));if(s(r)&&s(n))return f.push({property:g(t,e),type:c,from:"Array[".concat(r.length,"]"),to:""}),Object.getOwnPropertyNames(n).forEach(function(r,o,u){f=f.concat(h(g(t,e),r,void 0,n[r]))}),f;if(m(r)&&(y(n)||l(n)))return f.push({property:g(t,e),type:i,from:"{}",to:(0,o.default)(n)}),f;if(m(r)&&s(n)){f.push({property:g(t,e),type:c,from:"{}",to:(0,o.default)(n)});for(var j=0;j<n.length;j++)f=f.concat(h(g(t,e),"[".concat(j,"]"),void 0,n[j]));return f}return m(r)&&m(n)&&(Object.getOwnPropertyNames(r).forEach(function(o,u,i){f=f.concat(h(g(t,e),o,r[o],n[o]))}),Object.getOwnPropertyNames(n).forEach(function(o,u,i){void 0===r[o]&&(f=f.concat(h(g(t,e),o,void 0,n[o])))})),f}},function(t,e,r){"use strict";function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=function t(e){if("boolean"==typeof e||"number"==typeof e||"string"==typeof e)return e.toString();if(null===e)return"null";if(void 0===e)return"undefined";if("symbol"===n(e))return"symbol";if(e instanceof Date)return e.toUTCString();if(Array.isArray(e))return e.map(function(e){return t(e)}).join(", ");if("function"==typeof e)return"function";return JSON.stringify(e)},t.exports=e.default}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,